version: '3.8'

services:
    rabbitmq:
        image: rabbitmq:3-management-alpine

    cartdb:
        image: postgres

    servicediscoverydb:
        image: mcr.microsoft.com/mssql/server:2025-latest

    unicorn.eshop.cart:
        image: ${DOCKER_REGISTRY-}unicorneshopcart
        build:
            context: .
            dockerfile: src/eShop/cart/Unicorn.eShop.Cart/Dockerfile

    unicorn.eshop.discount:
        image: ${DOCKER_REGISTRY-}unicorneshopdiscount
        build:
            context: .
            dockerfile: src/eShop/discount/Unicorn.eShop.Discount/Dockerfile

    unicorn.eshop.catalog:
        image: ${DOCKER_REGISTRY-}unicorneshopcatalog
        build:
            context: .
            dockerfile: src/eShop/catalog/Unicorn.eShop.Catalog/Dockerfile

    unicorn.core.services.servicediscovery:
        image: ${DOCKER_REGISTRY-}unicorncoreservicesservicediscovery
        build:
            context: .
            dockerfile: src/core/services/service-discovery/Unicorn.Core.Services.ServiceDiscovery/Dockerfile

    unicorn.core.services.apigateway.ocelot:
        image: ${DOCKER_REGISTRY-}unicorn.core.services.apigateway.ocelot
        build:
            context: .
            dockerfile: src/core/services/api-gateway/Unicorn.Core.Services.ApiGateway.Ocelot/Dockerfile

    unicorn.core.services.systemstatus.healthcheck:
        image: ${DOCKER_REGISTRY-}unicorn.core.services.systemstatus.healthcheck
        build:
            context: .
            dockerfile: src/core/services/system-status/Unicorn.Core.Services.SystemStatus.HealthCheck/Dockerfile

    #unicorn.core.services.authentication.openiddict:
    #    image: ${DOCKER_REGISTRY-}unicorncoreservicesauthenticationopeniddict
    #    build:
    #        context: .
    #        dockerfile: core/services/authentication/Unicorn.Core.Services.Authentication.OpenIddict/Dockerfile

    #services for development only. These services are launched only when option
    #'Development Docker Compose' in launch settings is selected 
    unicorn.core.development.clienthost:
        image: ${DOCKER_REGISTRY-}unicorn.core.development.clienthost
        build:
            context: .
            dockerfile: src/core/development/Unicorn.Core.Development.ClientHost/Dockerfile

    unicorn.core.development.servicehost:
        image: ${DOCKER_REGISTRY-}unicorn.core.development.servicehost
        build:
            context: .
            dockerfile: src/core/development/Unicorn.Core.Development.ServiceHost/Dockerfile

volumes:
    postgres_data:
    sql-data: